xpath queries for searching log files

- get all records whose exception message does not contain text
//record[exception/message[not(contains(text(),'TEXT'))]]

- get record where exception message does not contain either of two below strings
//record[exception/message[  (contains(text(),'java.io.IOException') or contains(text(),'ERR]')) = false()  ]]

- extract only some subnodes from record
//record[exception/message[not(contains(text(),'ERR]'))]]//*[(self::message or self::date)]

- CROELECT 
-- novilist parse errors
//record[exception/message[  (contains(text(),'parse ERR') and contains(text(),'novilist.hr'))  ]]
-- non novilist parse errors, messages and dates
//record[exception/message[  not((contains(text(),'parse ERR') and contains(text(),'novilist.hr')))  ]]/(message|date)
-- common errors
//record[message[ not(contains(text(),'committing rollback failed')) and not(contains(text(),'download feed entries for feed failed')) and not(contains(text(),'novilist.hr')) and not(contains(text(),'scraping article failed')) and not(contains(text(),'httpool-nakon-twittera-sklapa')) and not(contains(text(),'saving article failed')) and not(contains(text(),'download feed entries for feed failed')) and not(contains(text(),'novilist.hr')) and not(contains(text(),'scraping article failed')) and not(contains(text(),'httpool-nakon-twittera-sklapa')) and not(contains(text(),'ucenicima-hrvatskog-vrtica-i-skola-u-budimpesti')) ]]/(message|date)
//record[message[ not(contains(text(),'httpool-nakon-twitter')) and not(contains(text(),'novilist.hr')) ]]/(message|date)
//record[message[ not(contains(text(),'download feed entries for feed failed')) and not(contains(text(),'novilist.hr')) and not(contains(text(),'scraping article failed')) and not(contains(text(),'httpool-nakon-twittera-sklapa')) and not(contains(text(),'ucenicima-hrvatskog-vrtica-i-skola-u-budimpesti')) ]]/(message|date)
